{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./node_modules/elasticlunr/elasticlunr.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/core-js/modules/es6.number.is-nan.js","webpack:///./node_modules/query-string/node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/split-on-first/index.js"],"names":["global","__webpack_require__","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","this","piRE","fiU","undefined","constructor","source","call","proxy","key","configurable","get","set","it","keys","i","length","$export","defined","fails","spaces","space","ltrim","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","P","F","string","TYPE","String","replace","module","exports","has","cof","toPrimitive","gOPD","$trim","$Number","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","l","parseInt","value","arguments","that","valueOf","split","j","toObject","Date","toJSON","toISOString","O","pv","isFinite","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","Index","pipeline","add","trimmer","stopWordFilter","stemmer","version","lunr","utils","warn","message","console","toString","obj","EventEmitter","events","addListener","args","Array","pop","names","TypeError","forEach","name","hasHandler","push","removeListener","fnIndex","indexOf","splice","emit","apply","tokenizer","str","isArray","arr","filter","token","map","t","toLowerCase","out","item","tokens","seperator","concat","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","load","serialised","fnName","Error","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","reset","_fields","_ref","documentStore","DocumentStore","index","eventEmitter","_idfCache","on","bind","off","serialisedData","field","fields","ref","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","getDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","Object","hasOwnProperty","df","getDocFreq","log","getFields","search","query","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","results","score","sort","a","b","booleanType","bool","expand","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","copy","attr","clone","updateFieldLength","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","c","w","stem","suffix","firstch","re","re3","re4","substr","toUpperCase","test","fp","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","","able","about","across","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","got","had","have","he","her","hers","him","his","how","however","if","in","into","is","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","often","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","the","their","them","then","there","these","they","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your","root","tokenInfo","hasToken","node","getNode","memo","parse","buildUserConfig","error","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","element","locationFor","toArray","ctx","elem","start","end","sectionLength","pivot","floor","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements","_toConsumableArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","_iterableToArray","_nonIterableSpread","strictUriEncode","decodeComponent","splitOnFirst","encode","options","strict","encodeURIComponent","decode","removeHash","input","hashStart","extract","queryStart","formatter","result","arrayFormat","accumulator","newValue","parserForArrayFormat","assign","parseNumbers","parseBooleans","ret","create","_iterator","_isArray","_i","next","done","_splitOnFirst","Number","isNaN","reduce","Boolean","keysSorter","object","join","encoderForArrayFormat","x","parseUrl","url","S","number","singleMatcher","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","match","encodedURI","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","separator","separatorIndex"],"mappings":"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","file":"17-a1a351f2cd12ecdffa12.js","sourcesContent":["var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n(function () {\n  /*!\n   * elasticlunr.js\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * Convenience function for instantiating a new elasticlunr index and configuring it\n   * with the default pipeline functions and the passed config function.\n   *\n   * When using this convenience function a new index will be created with the\n   * following functions already in the pipeline:\n   * \n   * 1. elasticlunr.trimmer - trim non-word character\n   * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n   * index\n   * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n   *\n   *\n   * Example:\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.addField('id');\n   *       this.addField('title');\n   *       this.addField('body');\n   *       \n   *       //this.setRef('id'); // default ref is 'id'\n   *\n   *       this.pipeline.add(function () {\n   *         // some custom pipeline function\n   *       });\n   *     });\n   * \n   *    idx.addDoc({\n   *      id: 1, \n   *      title: 'Oracle released database 12g',\n   *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n   *    });\n   * \n   *    idx.addDoc({\n   *      id: 2, \n   *      title: 'Oracle released annual profit report',\n   *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n   *    });\n   * \n   *    # simple search\n   *    idx.search('oracle database');\n   * \n   *    # search with query-time boosting\n   *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   *\n   * @param {Function} config A function that will be called with the new instance\n   * of the elasticlunr.Index as both its context and first parameter. It can be used to\n   * customize the instance of new elasticlunr.Index.\n   * @namespace\n   * @module\n   * @return {elasticlunr.Index}\n   *\n   */\n  var elasticlunr = function elasticlunr(config) {\n    var idx = new elasticlunr.Index();\n    idx.pipeline.add(elasticlunr.trimmer, elasticlunr.stopWordFilter, elasticlunr.stemmer);\n    if (config) config.call(idx, idx);\n    return idx;\n  };\n\n  elasticlunr.version = \"0.9.5\"; // only used this to make elasticlunr.js compatible with lunr-languages\n  // this is a trick to define a global alias of elasticlunr\n\n  lunr = elasticlunr;\n  /*!\n   * elasticlunr.utils\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A namespace containing utils for the rest of the elasticlunr library\n   */\n\n  elasticlunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf Utils\n   */\n\n  elasticlunr.utils.warn = function (global) {\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n  }(this);\n  /**\n   * Convert an object to string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * an empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {object} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf Utils\n   */\n\n\n  elasticlunr.utils.toString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    }\n\n    return obj.toString();\n  };\n  /*!\n   * elasticlunr.EventEmitter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n   * It manages adding and removing event handlers and triggering events and their handlers.\n   *\n   * Each event could has multiple corresponding functions,\n   * these functions will be called as the sequence that they are added into the event.\n   * \n   * @constructor\n   */\n\n\n  elasticlunr.EventEmitter = function () {\n    this.events = {};\n  };\n  /**\n   * Binds a handler function to a specific event(s).\n   *\n   * Can bind a single function to many different events in one call.\n   *\n   * @param {String} [eventName] The name(s) of events to bind this function to.\n   * @param {Function} fn The function to call when an event is fired.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.addListener = function () {\n    var args = Array.prototype.slice.call(arguments),\n        fn = args.pop(),\n        names = args;\n    if (typeof fn !== \"function\") throw new TypeError(\"last argument must be a function\");\n    names.forEach(function (name) {\n      if (!this.hasHandler(name)) this.events[name] = [];\n      this.events[name].push(fn);\n    }, this);\n  };\n  /**\n   * Removes a handler function from a specific event.\n   *\n   * @param {String} eventName The name of the event to remove this function from.\n   * @param {Function} fn The function to remove from an event.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n    if (!this.hasHandler(name)) return;\n    var fnIndex = this.events[name].indexOf(fn);\n    if (fnIndex === -1) return;\n    this.events[name].splice(fnIndex, 1);\n    if (this.events[name].length == 0) delete this.events[name];\n  };\n  /**\n   * Call all functions that bounded to the given event.\n   *\n   * Additional data can be passed to the event handler as arguments to `emit`\n   * after the event name.\n   *\n   * @param {String} eventName The name of the event to emit.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.emit = function (name) {\n    if (!this.hasHandler(name)) return;\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.events[name].forEach(function (fn) {\n      fn.apply(undefined, args);\n    }, this);\n  };\n  /**\n   * Checks whether a handler has ever been stored against an event.\n   *\n   * @param {String} eventName The name of the event to check.\n   * @private\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n    return name in this.events;\n  };\n  /*!\n   * elasticlunr.tokenizer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A function for splitting a string into tokens.\n   * Currently English is supported as default.\n   * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n   * the value of this property to set how you want strings are split into tokens.\n   * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n   * text process, then you'd better not change it.\n   *\n   * @module\n   * @param {String} str The string that you want to tokenize.\n   * @see elasticlunr.tokenizer.seperator\n   * @return {Array}\n   */\n\n\n  elasticlunr.tokenizer = function (str) {\n    if (!arguments.length || str === null || str === undefined) return [];\n\n    if (Array.isArray(str)) {\n      var arr = str.filter(function (token) {\n        if (token === null || token === undefined) {\n          return false;\n        }\n\n        return true;\n      });\n      arr = arr.map(function (t) {\n        return elasticlunr.utils.toString(t).toLowerCase();\n      });\n      var out = [];\n      arr.forEach(function (item) {\n        var tokens = item.split(elasticlunr.tokenizer.seperator);\n        out = out.concat(tokens);\n      }, this);\n      return out;\n    }\n\n    return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n  };\n  /**\n   * Default string seperator.\n   */\n\n\n  elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n  /**\n   * The sperator used to split a string into tokens. Override this property to change the behaviour of\n   * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see elasticlunr.tokenizer\n   */\n\n  elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  /**\n   * Set up customized string seperator\n   *\n   * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n   */\n\n  elasticlunr.tokenizer.setSeperator = function (sep) {\n    if (sep !== null && sep !== undefined && typeof sep === 'object') {\n      elasticlunr.tokenizer.seperator = sep;\n    }\n  };\n  /**\n   * Reset string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.resetSeperator = function () {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  };\n  /**\n   * Get string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.getSeperator = function () {\n    return elasticlunr.tokenizer.seperator;\n  };\n  /*!\n   * elasticlunr.Pipeline\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n   * both documents tokens and query tokens.\n   *\n   * An instance of elasticlunr.Index will contain a pipeline\n   * with a trimmer, a stop word filter, an English stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline, it will call each function in turn.\n   *\n   * The output of the functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Pipeline = function () {\n    this._queue = [];\n  };\n\n  elasticlunr.Pipeline.registeredFunctions = {};\n  /**\n   * Register a function in the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {Function} fn The function to register.\n   * @param {String} label The label to register this function with\n   * @memberOf Pipeline\n   */\n\n  elasticlunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions) {\n      elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    elasticlunr.Pipeline.registeredFunctions[label] = fn;\n  };\n  /**\n   * Get a registered function in the pipeline.\n   *\n   * @param {String} label The label of registered function.\n   * @return {Function}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.getRegisteredFunction = function (label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions !== true) {\n      return null;\n    }\n\n    return elasticlunr.Pipeline.registeredFunctions[label];\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {Function} fn The function to check for.\n   * @private\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised The serialised pipeline to load.\n   * @return {elasticlunr.Pipeline}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.load = function (serialised) {\n    var pipeline = new elasticlunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load un-registered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {Function} functions Any number of functions to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._queue.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos + 1, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {Function} fn The function to remove from the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._queue.indexOf(fn);\n\n    if (pos === -1) {\n      return;\n    }\n\n    this._queue.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that registered in the pipeline against the\n   * input tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.run = function (tokens) {\n    var out = [],\n        tokenLength = tokens.length,\n        pipelineLength = this._queue.length;\n\n    for (var i = 0; i < tokenLength; i++) {\n      var token = tokens[i];\n\n      for (var j = 0; j < pipelineLength; j++) {\n        token = this._queue[j](token, i, tokens);\n        if (token === void 0 || token === null) break;\n      }\n\n      ;\n      if (token !== void 0 && token !== null) out.push(token);\n    }\n\n    ;\n    return out;\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.reset = function () {\n    this._queue = [];\n  };\n  /**\n   * Get the pipeline if user want to check the pipeline.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.get = function () {\n    return this._queue;\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   * Only serialize pipeline function's name. Not storing function, so when\n   * loading the archived JSON index file, corresponding pipeline function is \n   * added by registered function of elasticlunr.Pipeline.registeredFunctions\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.toJSON = function () {\n    return this._queue.map(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * elasticlunr.Index\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Index is object that manages a search index.  It contains the indexes\n   * and stores all the tokens and document lookups.  It also provides the main\n   * user facing API for the library.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Index = function () {\n    this._fields = [];\n    this._ref = 'id';\n    this.pipeline = new elasticlunr.Pipeline();\n    this.documentStore = new elasticlunr.DocumentStore();\n    this.index = {};\n    this.eventEmitter = new elasticlunr.EventEmitter();\n    this._idfCache = {};\n    this.on('add', 'remove', 'update', function () {\n      this._idfCache = {};\n    }.bind(this));\n  };\n  /**\n   * Bind a handler to events being emitted by the index.\n   *\n   * The handler can be bound to many events at the same time.\n   *\n   * @param {String} [eventName] The name(s) of events to bind the function to.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.on = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n  };\n  /**\n   * Removes a handler from an event being emitted by the index.\n   *\n   * @param {String} eventName The name of events to remove the function from.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.off = function (name, fn) {\n    return this.eventEmitter.removeListener(name, fn);\n  };\n  /**\n   * Loads a previously serialised index.\n   *\n   * Issues a warning if the index being imported was serialised\n   * by a different version of elasticlunr.\n   *\n   * @param {Object} serialisedData The serialised set to load.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.load = function (serialisedData) {\n    if (serialisedData.version !== elasticlunr.version) {\n      elasticlunr.utils.warn('version mismatch: current ' + elasticlunr.version + ' importing ' + serialisedData.version);\n    }\n\n    var idx = new this();\n    idx._fields = serialisedData.fields;\n    idx._ref = serialisedData.ref;\n    idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n    idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n    idx.index = {};\n\n    for (var field in serialisedData.index) {\n      idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n    }\n\n    return idx;\n  };\n  /**\n   * Adds a field to the list of fields that will be searchable within documents in the index.\n   *\n   * Remember that inner index is build based on field, which means each field has one inverted index.\n   *\n   * Fields should be added before any documents are added to the index, fields\n   * that are added after documents are added to the index will only apply to new\n   * documents added to the index.\n   *\n   * @param {String} fieldName The name of the field within the document that should be indexed\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addField = function (fieldName) {\n    this._fields.push(fieldName);\n\n    this.index[fieldName] = new elasticlunr.InvertedIndex();\n    return this;\n  };\n  /**\n   * Sets the property used to uniquely identify documents added to the index,\n   * by default this property is 'id'.\n   *\n   * This should only be changed before adding documents to the index, changing\n   * the ref property without resetting the index can lead to unexpected results.\n   *\n   * @param {String} refName The property to use to uniquely identify the\n   * documents in the index.\n   * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.setRef = function (refName) {\n    this._ref = refName;\n    return this;\n  };\n  /**\n   *\n   * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n   *\n   * Defaultly save all the original JSON documents.\n   *\n   * @param {Boolean} save Whether to save the original JSON documents.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.saveDocument = function (save) {\n    this.documentStore = new elasticlunr.DocumentStore(save);\n    return this;\n  };\n  /**\n   * Add a JSON format document to the index.\n   *\n   * This is the way new documents enter the index, this function will run the\n   * fields from the document through the index's pipeline and then add it to\n   * the index, it will then show up in search results.\n   *\n   * An 'add' event is emitted with the document that has been added and the index\n   * the document has been added to. This event can be silenced by passing false\n   * as the second argument to add.\n   *\n   * @param {Object} doc The JSON format document to add to the index.\n   * @param {Boolean} emitEvent Whether or not to emit events, default true.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    this.documentStore.addDoc(docRef, doc);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n      var tokenCount = {};\n      fieldTokens.forEach(function (token) {\n        if (token in tokenCount) tokenCount[token] += 1;else tokenCount[token] = 1;\n      }, this);\n\n      for (var token in tokenCount) {\n        var termFrequency = tokenCount[token];\n        termFrequency = Math.sqrt(termFrequency);\n        this.index[field].addToken(token, {\n          ref: docRef,\n          tf: termFrequency\n        });\n      }\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('add', doc, this);\n  };\n  /**\n   * Removes a document from the index by doc ref.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n   *\n   * @param {String|Integer} docRef The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n    if (!docRef) return;\n\n    if (this.documentStore.isDocStored() === false) {\n      return;\n    }\n\n    if (!this.documentStore.hasDoc(docRef)) return;\n    var doc = this.documentStore.getDoc(docRef);\n    this.removeDoc(doc, false);\n  };\n  /**\n   * Removes a document from the index.\n   * This remove operation could work even the original doc is not store in the DocumentStore.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   *\n   * @param {Object} doc The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    if (!this.documentStore.hasDoc(docRef)) return;\n    this.documentStore.removeDoc(docRef);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      fieldTokens.forEach(function (token) {\n        this.index[field].removeToken(token, docRef);\n      }, this);\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n  };\n  /**\n   * Updates a document in the index.\n   *\n   * When a document contained within the index gets updated, fields changed,\n   * added or removed, to make sure it correctly matched against search queries,\n   * it should be updated in the index.\n   *\n   * This method is just a wrapper around `remove` and `add`\n   *\n   * An 'update' event is emitted with the document that has been updated and the index.\n   * This event can be silenced by passing false as the second argument to update. Only\n   * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n   * are silenced.\n   *\n   * @param {Object} doc The document to update in the index.\n   * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n   * @see Index.prototype.remove\n   * @see Index.prototype.add\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    this.removeDocByRef(doc[this._ref], false);\n    this.addDoc(doc, false);\n    if (emitEvent) this.eventEmitter.emit('update', doc, this);\n  };\n  /**\n   * Calculates the inverse document frequency for a token within the index of a field.\n   *\n   * @param {String} token The token to calculate the idf of.\n   * @param {String} field The field to compute idf.\n   * @see Index.prototype.idf\n   * @private\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.idf = function (term, field) {\n    var cacheKey = \"@\" + field + '/' + term;\n    if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n    var df = this.index[field].getDocFreq(term);\n    var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n    this._idfCache[cacheKey] = idf;\n    return idf;\n  };\n  /**\n   * get fields of current index instance\n   *\n   * @return {Array}\n   */\n\n\n  elasticlunr.Index.prototype.getFields = function () {\n    return this._fields.slice();\n  };\n  /**\n   * Searches the index using the passed query.\n   * Queries should be a string, multiple words are allowed.\n   *\n   * If config is null, will search all fields defaultly, and lead to OR based query.\n   * If config is specified, will search specified with query time boosting.\n   *\n   * All query tokens are passed through the same pipeline that document tokens\n   * are passed through, so any language processing involved will be run on every\n   * query term.\n   *\n   * Each query term is expanded, so that the term 'he' might be expanded to\n   * 'hello' and 'help' if those terms were already included in the index.\n   *\n   * Matching documents are returned as an array of objects, each object contains\n   * the matching document ref, as set for this index, and the similarity score\n   * for this document against the query.\n   *\n   * @param {String} query The query to search the index with.\n   * @param {JSON} userConfig The user query config, JSON format.\n   * @return {Object}\n   * @see Index.prototype.idf\n   * @see Index.prototype.documentVector\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.search = function (query, userConfig) {\n    if (!query) return [];\n    var configStr = null;\n\n    if (userConfig != null) {\n      configStr = JSON.stringify(userConfig);\n    }\n\n    var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n    var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n    var queryResults = {};\n\n    for (var field in config) {\n      var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n      var fieldBoost = config[field].boost;\n\n      for (var docRef in fieldSearchResults) {\n        fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n      }\n\n      for (var docRef in fieldSearchResults) {\n        if (docRef in queryResults) {\n          queryResults[docRef] += fieldSearchResults[docRef];\n        } else {\n          queryResults[docRef] = fieldSearchResults[docRef];\n        }\n      }\n    }\n\n    var results = [];\n\n    for (var docRef in queryResults) {\n      results.push({\n        ref: docRef,\n        score: queryResults[docRef]\n      });\n    }\n\n    results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    return results;\n  };\n  /**\n   * search queryTokens in specified field.\n   *\n   * @param {Array} queryTokens The query tokens to query in this field.\n   * @param {String} field Field to query in.\n   * @param {elasticlunr.Configuration} config The user query config, JSON format.\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n    var booleanType = config[fieldName].bool;\n    var expand = config[fieldName].expand;\n    var boost = config[fieldName].boost;\n    var scores = null;\n    var docTokens = {}; // Do nothing if the boost is 0\n\n    if (boost === 0) {\n      return;\n    }\n\n    queryTokens.forEach(function (token) {\n      var tokens = [token];\n\n      if (expand == true) {\n        tokens = this.index[fieldName].expandToken(token);\n      } // Consider every query token in turn. If expanded, each query token\n      // corresponds to a set of tokens, which is all tokens in the \n      // index matching the pattern queryToken* .\n      // For the set of tokens corresponding to a query token, find and score\n      // all matching documents. Store those scores in queryTokenScores, \n      // keyed by docRef.\n      // Then, depending on the value of booleanType, combine the scores\n      // for this query token with previous scores.  If booleanType is OR,\n      // then merge the scores by summing into the accumulated total, adding\n      // new document scores are required (effectively a union operator). \n      // If booleanType is AND, accumulate scores only if the document \n      // has previously been scored by another query token (an intersection\n      // operation0. \n      // Furthermore, since when booleanType is AND, additional \n      // query tokens can't add new documents to the result set, use the\n      // current document set to limit the processing of each new query \n      // token for efficiency (i.e., incremental intersection).\n\n\n      var queryTokenScores = {};\n      tokens.forEach(function (key) {\n        var docs = this.index[fieldName].getDocs(key);\n        var idf = this.idf(key, fieldName);\n\n        if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n\n          for (var docRef in scores) {\n            if (docRef in docs) {\n              filteredDocs[docRef] = docs[docRef];\n            }\n          }\n\n          docs = filteredDocs;\n        } // only record appeared token for retrieved documents for the\n        // original token, not for expaned token.\n        // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n        // query token appear in that document.\n        // so expanded token should not be added into docTokens, if added, this will pollute the\n        // coordNorm\n\n\n        if (key == token) {\n          this.fieldSearchStats(docTokens, key, docs);\n        }\n\n        for (var docRef in docs) {\n          var tf = this.index[fieldName].getTermFrequency(key, docRef);\n          var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n          var fieldLengthNorm = 1;\n\n          if (fieldLength != 0) {\n            fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n          }\n\n          var penality = 1;\n\n          if (key != token) {\n            // currently I'm not sure if this penality is enough,\n            // need to do verification\n            penality = (1 - (key.length - token.length) / key.length) * 0.15;\n          }\n\n          var score = tf * idf * fieldLengthNorm * penality;\n\n          if (docRef in queryTokenScores) {\n            queryTokenScores[docRef] += score;\n          } else {\n            queryTokenScores[docRef] = score;\n          }\n        }\n      }, this);\n      scores = this.mergeScores(scores, queryTokenScores, booleanType);\n    }, this);\n    scores = this.coordNorm(scores, docTokens, queryTokens.length);\n    return scores;\n  };\n  /**\n   * Merge the scores from one set of tokens into an accumulated score table.\n   * Exact operation depends on the op parameter. If op is 'AND', then only the\n   * intersection of the two score lists is retained. Otherwise, the union of\n   * the two score lists is returned. For internal use only.\n   *\n   * @param {Object} bool accumulated scores. Should be null on first call.\n   * @param {String} scores new scores to merge into accumScores.\n   * @param {Object} op merge operation (should be 'AND' or 'OR').\n   *\n   */\n\n\n  elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n      return scores;\n    }\n\n    if (op == 'AND') {\n      var intersection = {};\n\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          intersection[docRef] = accumScores[docRef] + scores[docRef];\n        }\n      }\n\n      return intersection;\n    } else {\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          accumScores[docRef] += scores[docRef];\n        } else {\n          accumScores[docRef] = scores[docRef];\n        }\n      }\n\n      return accumScores;\n    }\n  };\n  /**\n   * Record the occuring query token of retrieved doc specified by doc field.\n   * Only for inner user.\n   *\n   * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n   * @param {String} token query token\n   * @param {Object} docs the retrieved documents of the query token\n   *\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n    for (var doc in docs) {\n      if (doc in docTokens) {\n        docTokens[doc].push(token);\n      } else {\n        docTokens[doc] = [token];\n      }\n    }\n  };\n  /**\n   * coord norm the score of a doc.\n   * if a doc contain more query tokens, then the score will larger than the doc\n   * contains less query tokens.\n   *\n   * only for inner use.\n   *\n   * @param {Object} results first results\n   * @param {Object} docs field search results of a token\n   * @param {Integer} n query token number\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n    for (var doc in scores) {\n      if (!(doc in docTokens)) continue;\n      var tokens = docTokens[doc].length;\n      scores[doc] = scores[doc] * tokens / n;\n    }\n\n    return scores;\n  };\n  /**\n   * Returns a representation of the index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.toJSON = function () {\n    var indexJson = {};\n\n    this._fields.forEach(function (field) {\n      indexJson[field] = this.index[field].toJSON();\n    }, this);\n\n    return {\n      version: elasticlunr.version,\n      fields: this._fields,\n      ref: this._ref,\n      documentStore: this.documentStore.toJSON(),\n      index: indexJson,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Applies a plugin to the current index.\n   *\n   * A plugin is a function that is called with the index as its context.\n   * Plugins can be used to customise or extend the behaviour the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied to the index.\n   *\n   * The plugin function will be called with the index as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index as its context.\n   *\n   * Example:\n   *\n   *     var myPlugin = function (idx, arg1, arg2) {\n   *       // `this` is the index to be extended\n   *       // apply any extensions etc here.\n   *     }\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.use(myPlugin, 'arg1', 'arg2')\n   *     })\n   *\n   * @param {Function} plugin The plugin to apply.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.use = function (plugin) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    plugin.apply(this, args);\n  };\n  /*!\n   * elasticlunr.DocumentStore\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n   * documents stored in index.\n   *\n   * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n   *\n   * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n   * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n   * could not use JSON document to generate snippets of search results.\n   *\n   * @param {Boolean} save If the original JSON document should be stored.\n   * @constructor\n   * @module\n   */\n\n\n  elasticlunr.DocumentStore = function (save) {\n    if (save === null || save === undefined) {\n      this._save = true;\n    } else {\n      this._save = save;\n    }\n\n    this.docs = {};\n    this.docInfo = {};\n    this.length = 0;\n  };\n  /**\n   * Loads a previously serialised document store\n   *\n   * @param {Object} serialisedData The serialised document store to load.\n   * @return {elasticlunr.DocumentStore}\n   */\n\n\n  elasticlunr.DocumentStore.load = function (serialisedData) {\n    var store = new this();\n    store.length = serialisedData.length;\n    store.docs = serialisedData.docs;\n    store.docInfo = serialisedData.docInfo;\n    store._save = serialisedData.save;\n    return store;\n  };\n  /**\n   * check if current instance store the original doc\n   *\n   * @return {Boolean}\n   */\n\n\n  elasticlunr.DocumentStore.prototype.isDocStored = function () {\n    return this._save;\n  };\n  /**\n   * Stores the given doc in the document store against the given id.\n   * If docRef already exist, then update doc.\n   *\n   * Document is store by original JSON format, then you could use original document to generate search snippets.\n   *\n   * @param {Integer|String} docRef The key used to store the JSON format doc.\n   * @param {Object} doc The JSON format doc.\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n    if (!this.hasDoc(docRef)) this.length++;\n\n    if (this._save === true) {\n      this.docs[docRef] = clone(doc);\n    } else {\n      this.docs[docRef] = null;\n    }\n  };\n  /**\n   * Retrieves the JSON doc from the document store for a given key.\n   *\n   * If docRef not found, return null.\n   * If user set not storing the documents, return null.\n   *\n   * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n   * @return {Object}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n    if (this.hasDoc(docRef) === false) return null;\n    return this.docs[docRef];\n  };\n  /**\n   * Checks whether the document store contains a key (docRef).\n   *\n   * @param {Integer|String} docRef The id to look up in the document store.\n   * @return {Boolean}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n    return docRef in this.docs;\n  };\n  /**\n   * Removes the value for a key in the document store.\n   *\n   * @param {Integer|String} docRef The id to remove from the document store.\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n    if (!this.hasDoc(docRef)) return;\n    delete this.docs[docRef];\n    delete this.docInfo[docRef];\n    this.length--;\n  };\n  /**\n   * Add field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n    this.docInfo[docRef][fieldName] = length;\n  };\n  /**\n   * Update field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    this.addFieldLength(docRef, fieldName, length);\n  };\n  /**\n   * get field length of a document by docRef\n   *\n   * @param {Integer|String} docRef document id or reference\n   * @param {String} fieldName field name\n   * @return {Integer} field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n    if (docRef === null || docRef === undefined) return 0;\n    if (!(docRef in this.docs)) return 0;\n    if (!(fieldName in this.docInfo[docRef])) return 0;\n    return this.docInfo[docRef][fieldName];\n  };\n  /**\n   * Returns a JSON representation of the document store used for serialisation.\n   *\n   * @return {Object} JSON format\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.toJSON = function () {\n    return {\n      docs: this.docs,\n      docInfo: this.docInfo,\n      length: this.length,\n      save: this._save\n    };\n  };\n  /**\n   * Cloning object\n   *\n   * @param {Object} object in JSON format\n   * @return {Object} copied object\n   */\n\n\n  function clone(obj) {\n    if (null === obj || \"object\" !== typeof obj) return obj;\n    var copy = obj.constructor();\n\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n\n    return copy;\n  }\n  /*!\n   * elasticlunr.stemmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @module\n   * @param {String} str The string to stem\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n\n  elasticlunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return porterStemmer;\n  }();\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n  /*!\n   * elasticlunr.stopWordFilter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.stopWordFilter is an English language stop words filter, any words\n   * contained in the stop word list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.stopWordFilter = function (token) {\n    if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n      return token;\n    }\n  };\n  /**\n   * Remove predefined stop words\n   * if user want to use customized stop words, user could use this function to delete\n   * all predefined stopwords.\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.clearStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = {};\n  };\n  /**\n   * Add customized stop words\n   * user could use this function to add customized stop words\n   * \n   * @params {Array} words customized stop words\n   * @return {null}\n   */\n\n\n  elasticlunr.addStopWords = function (words) {\n    if (words == null || Array.isArray(words) === false) return;\n    words.forEach(function (word) {\n      elasticlunr.stopWordFilter.stopWords[word] = true;\n    }, this);\n  };\n  /**\n   * Reset to default stop words\n   * user could use this function to restore default stop words\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.resetStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  };\n\n  elasticlunr.defaultStopWords = {\n    \"\": true,\n    \"a\": true,\n    \"able\": true,\n    \"about\": true,\n    \"across\": true,\n    \"after\": true,\n    \"all\": true,\n    \"almost\": true,\n    \"also\": true,\n    \"am\": true,\n    \"among\": true,\n    \"an\": true,\n    \"and\": true,\n    \"any\": true,\n    \"are\": true,\n    \"as\": true,\n    \"at\": true,\n    \"be\": true,\n    \"because\": true,\n    \"been\": true,\n    \"but\": true,\n    \"by\": true,\n    \"can\": true,\n    \"cannot\": true,\n    \"could\": true,\n    \"dear\": true,\n    \"did\": true,\n    \"do\": true,\n    \"does\": true,\n    \"either\": true,\n    \"else\": true,\n    \"ever\": true,\n    \"every\": true,\n    \"for\": true,\n    \"from\": true,\n    \"get\": true,\n    \"got\": true,\n    \"had\": true,\n    \"has\": true,\n    \"have\": true,\n    \"he\": true,\n    \"her\": true,\n    \"hers\": true,\n    \"him\": true,\n    \"his\": true,\n    \"how\": true,\n    \"however\": true,\n    \"i\": true,\n    \"if\": true,\n    \"in\": true,\n    \"into\": true,\n    \"is\": true,\n    \"it\": true,\n    \"its\": true,\n    \"just\": true,\n    \"least\": true,\n    \"let\": true,\n    \"like\": true,\n    \"likely\": true,\n    \"may\": true,\n    \"me\": true,\n    \"might\": true,\n    \"most\": true,\n    \"must\": true,\n    \"my\": true,\n    \"neither\": true,\n    \"no\": true,\n    \"nor\": true,\n    \"not\": true,\n    \"of\": true,\n    \"off\": true,\n    \"often\": true,\n    \"on\": true,\n    \"only\": true,\n    \"or\": true,\n    \"other\": true,\n    \"our\": true,\n    \"own\": true,\n    \"rather\": true,\n    \"said\": true,\n    \"say\": true,\n    \"says\": true,\n    \"she\": true,\n    \"should\": true,\n    \"since\": true,\n    \"so\": true,\n    \"some\": true,\n    \"than\": true,\n    \"that\": true,\n    \"the\": true,\n    \"their\": true,\n    \"them\": true,\n    \"then\": true,\n    \"there\": true,\n    \"these\": true,\n    \"they\": true,\n    \"this\": true,\n    \"tis\": true,\n    \"to\": true,\n    \"too\": true,\n    \"twas\": true,\n    \"us\": true,\n    \"wants\": true,\n    \"was\": true,\n    \"we\": true,\n    \"were\": true,\n    \"what\": true,\n    \"when\": true,\n    \"where\": true,\n    \"which\": true,\n    \"while\": true,\n    \"who\": true,\n    \"whom\": true,\n    \"why\": true,\n    \"will\": true,\n    \"with\": true,\n    \"would\": true,\n    \"yet\": true,\n    \"you\": true,\n    \"your\": true\n  };\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * elasticlunr.trimmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.trimmer is a pipeline function for trimming non word\n   * characters from the begining and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.trimmer = function (token) {\n    if (token === null || token === undefined) {\n      throw new Error('token should not be undefined');\n    }\n\n    return token.replace(/^\\W+/, '').replace(/\\W+$/, '');\n  };\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n  /*!\n   * elasticlunr.InvertedIndex\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.InvertedIndex is used for efficiently storing and\n   * lookup of documents that contain a given token.\n   *\n   * @constructor\n   */\n\n  elasticlunr.InvertedIndex = function () {\n    this.root = {\n      docs: {},\n      df: 0\n    };\n  };\n  /**\n   * Loads a previously serialised inverted index.\n   *\n   * @param {Object} serialisedData The serialised inverted index to load.\n   * @return {elasticlunr.InvertedIndex}\n   */\n\n\n  elasticlunr.InvertedIndex.load = function (serialisedData) {\n    var idx = new this();\n    idx.root = serialisedData.root;\n    return idx;\n  };\n  /**\n   * Adds a {token: tokenInfo} pair to the inverted index.\n   * If the token already exist, then update the tokenInfo.\n   *\n   * tokenInfo format: { ref: 1, tf: 2}\n   * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n   * the document.\n   *\n   * By default this function starts at the root of the current inverted index, however\n   * it can start at any node of the inverted index if required.\n   *\n   * @param {String} token \n   * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n   * @param {Object} root An optional node at which to start looking for the\n   * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n   * is used.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n    var root = root || this.root,\n        idx = 0;\n\n    while (idx <= token.length - 1) {\n      var key = token[idx];\n      if (!(key in root)) root[key] = {\n        docs: {},\n        df: 0\n      };\n      idx += 1;\n      root = root[key];\n    }\n\n    var docRef = tokenInfo.ref;\n\n    if (!root.docs[docRef]) {\n      // if this doc not exist, then add this doc\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n      root.df += 1;\n    } else {\n      // if this doc already exist, then update tokenInfo\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n    }\n  };\n  /**\n   * Checks whether a token is in this elasticlunr.InvertedIndex.\n   * \n   *\n   * @param {String} token The token to be checked\n   * @return {Boolean}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n    if (!token) return false;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return false;\n      node = node[token[i]];\n    }\n\n    return true;\n  };\n  /**\n   * Retrieve a node from the inverted index for a given token.\n   * If token not found in this InvertedIndex, return null.\n   * \n   *\n   * @param {String} token The token to get the node for.\n   * @return {Object}\n   * @see InvertedIndex.prototype.get\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getNode = function (token) {\n    if (!token) return null;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return null;\n      node = node[token[i]];\n    }\n\n    return node;\n  };\n  /**\n   * Retrieve the documents of a given token.\n   * If token not found, return {}.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return {};\n    }\n\n    return node.docs;\n  };\n  /**\n   * Retrieve term frequency of given token in given docRef.\n   * If token or docRef not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @param {String|Integer} docRef\n   * @return {Integer}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    if (!(docRef in node.docs)) {\n      return 0;\n    }\n\n    return node.docs[docRef].tf;\n  };\n  /**\n   * Retrieve the document frequency of given token.\n   * If token not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    return node.df;\n  };\n  /**\n   * Remove the document identified by document's ref from the token in the inverted index.\n   *\n   *\n   * @param {String} token Remove the document from which token.\n   * @param {String} ref The ref of the document to remove from given token.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n    if (!token) return;\n    var node = this.getNode(token);\n    if (node == null) return;\n\n    if (ref in node.docs) {\n      delete node.docs[ref];\n      node.df -= 1;\n    }\n  };\n  /**\n   * Find all the possible suffixes of given token using tokens currently in the inverted index.\n   * If token not found, return empty Array.\n   *\n   * @param {String} token The token to expand.\n   * @return {Array}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n    if (token == null || token == '') return [];\n    var memo = memo || [];\n\n    if (root == void 0) {\n      root = this.getNode(token);\n      if (root == null) return memo;\n    }\n\n    if (root.df > 0) memo.push(token);\n\n    for (var key in root) {\n      if (key === 'docs') continue;\n      if (key === 'df') continue;\n      this.expandToken(token + key, memo, root[key]);\n    }\n\n    return memo;\n  };\n  /**\n   * Returns a representation of the inverted index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.toJSON = function () {\n    return {\n      root: this.root\n    };\n  };\n  /*!\n   * elasticlunr.Configuration\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /** \n   * elasticlunr.Configuration is used to analyze the user search configuration.\n   * \n   * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n   * \n   * Currently configuration supports:\n   * 1. query-time boosting, user could set how to boost each field.\n   * 2. boolean model chosing, user could choose which boolean model to use for each field.\n   * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n   * \n   * Query time boosting must be configured by field category, \"boolean\" model could be configured \n   * by both field category or globally as the following example. Field configuration for \"boolean\"\n   * will overwrite global configuration.\n   * Token expand could be configured both by field category or golbally. Local field configuration will\n   * overwrite global configuration.\n   * \n   * configuration example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"bool\" field configuation overwrite global configuation example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"expand\" example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\",\n   *   expand: true\n   * }\n   * \n   * \"expand\" example for field category:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\", expand: true},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * setting the boost to 0 ignores the field (this will only search the title):\n   * {\n   *   fields:{\n   *     title: {boost: 1},\n   *     body: {boost: 0}\n   *   }\n   * }\n   *\n   * then, user could search with configuration to do query-time boosting.\n   * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   * \n   * \n   * @constructor\n   * \n   * @param {String} config user configuration\n   * @param {Array} fields fields of index instance\n   * @module\n   */\n\n\n  elasticlunr.Configuration = function (config, fields) {\n    var config = config || '';\n\n    if (fields == undefined || fields == null) {\n      throw new Error('fields should not be null');\n    }\n\n    this.config = {};\n    var userConfig;\n\n    try {\n      userConfig = JSON.parse(config);\n      this.buildUserConfig(userConfig, fields);\n    } catch (error) {\n      elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n      this.buildDefaultConfig(fields);\n    }\n  };\n  /**\n   * Build default search configuration.\n   * \n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n    this.reset();\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: \"OR\",\n        expand: false\n      };\n    }, this);\n  };\n  /**\n   * Build user configuration.\n   * \n   * @param {JSON} config User JSON configuratoin\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n    var global_bool = \"OR\";\n    var global_expand = false;\n    this.reset();\n\n    if ('bool' in config) {\n      global_bool = config['bool'] || global_bool;\n    }\n\n    if ('expand' in config) {\n      global_expand = config['expand'] || global_expand;\n    }\n\n    if ('fields' in config) {\n      for (var field in config['fields']) {\n        if (fields.indexOf(field) > -1) {\n          var field_config = config['fields'][field];\n          var field_expand = global_expand;\n\n          if (field_config.expand != undefined) {\n            field_expand = field_config.expand;\n          }\n\n          this.config[field] = {\n            boost: field_config.boost || field_config.boost === 0 ? field_config.boost : 1,\n            bool: field_config.bool || global_bool,\n            expand: field_expand\n          };\n        } else {\n          elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n        }\n      }\n    } else {\n      this.addAllFields2UserConfig(global_bool, global_expand, fields);\n    }\n  };\n  /**\n   * Add all fields to user search configuration.\n   * \n   * @param {String} bool Boolean model\n   * @param {String} expand Expand model\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: bool,\n        expand: expand\n      };\n    }, this);\n  };\n  /**\n   * get current user configuration\n   */\n\n\n  elasticlunr.Configuration.prototype.get = function () {\n    return this.config;\n  };\n  /**\n   * reset user search configuration.\n   */\n\n\n  elasticlunr.Configuration.prototype.reset = function () {\n    this.config = {};\n  };\n  /**\n   * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n   * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n   * much bigger that not good for browser usage.\n   *\n   */\n\n  /*!\n   * lunr.SortedSet\n   * Copyright (C) 2016 Oliver Nightingale\n   */\n\n  /**\n   * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n   * order.\n   *\n   * @constructor\n   */\n\n\n  lunr.SortedSet = function () {\n    this.length = 0;\n    this.elements = [];\n  };\n  /**\n   * Loads a previously serialised sorted set.\n   *\n   * @param {Array} serialisedData The serialised set to load.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.load = function (serialisedData) {\n    var set = new this();\n    set.elements = serialisedData;\n    set.length = serialisedData.length;\n    return set;\n  };\n  /**\n   * Inserts new items into the set in the correct position to maintain the\n   * order.\n   *\n   * @param {Object} The objects to add to this set.\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.add = function () {\n    var i, element;\n\n    for (i = 0; i < arguments.length; i++) {\n      element = arguments[i];\n      if (~this.indexOf(element)) continue;\n      this.elements.splice(this.locationFor(element), 0, element);\n    }\n\n    this.length = this.elements.length;\n  };\n  /**\n   * Converts this sorted set into an array.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toArray = function () {\n    return this.elements.slice();\n  };\n  /**\n   * Creates a new array with the results of calling a provided function on every\n   * element in this sorted set.\n   *\n   * Delegates to Array.prototype.map and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * for the function fn.\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.map = function (fn, ctx) {\n    return this.elements.map(fn, ctx);\n  };\n  /**\n   * Executes a provided function once per sorted set element.\n   *\n   * Delegates to Array.prototype.forEach and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * @memberOf SortedSet\n   * for the function fn.\n   */\n\n\n  lunr.SortedSet.prototype.forEach = function (fn, ctx) {\n    return this.elements.forEach(fn, ctx);\n  };\n  /**\n   * Returns the index at which a given element can be found in the\n   * sorted set, or -1 if it is not present.\n   *\n   * @param {Object} elem The object to locate in the sorted set.\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.indexOf = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem === elem) return pivot;\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem === elem) return pivot;\n    return -1;\n  };\n  /**\n   * Returns the position within the sorted set that an element should be\n   * inserted at to maintain the current order of the set.\n   *\n   * This function assumes that the element to search for does not already exist\n   * in the sorted set.\n   *\n   * @param {Object} elem The elem to find the position for in the set\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.locationFor = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem > elem) return pivot;\n    if (pivotElem < elem) return pivot + 1;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the intersection\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.intersect = function (otherSet) {\n    var intersectSet = new lunr.SortedSet(),\n        i = 0,\n        j = 0,\n        a_len = this.length,\n        b_len = otherSet.length,\n        a = this.elements,\n        b = otherSet.elements;\n\n    while (true) {\n      if (i > a_len - 1 || j > b_len - 1) break;\n\n      if (a[i] === b[j]) {\n        intersectSet.add(a[i]);\n        i++, j++;\n        continue;\n      }\n\n      if (a[i] < b[j]) {\n        i++;\n        continue;\n      }\n\n      if (a[i] > b[j]) {\n        j++;\n        continue;\n      }\n    }\n\n    ;\n    return intersectSet;\n  };\n  /**\n   * Makes a copy of this set\n   *\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.clone = function () {\n    var clone = new lunr.SortedSet();\n    clone.elements = this.toArray();\n    clone.length = clone.elements.length;\n    return clone;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the union\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to union with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.union = function (otherSet) {\n    var longSet, shortSet, unionSet;\n\n    if (this.length >= otherSet.length) {\n      longSet = this, shortSet = otherSet;\n    } else {\n      longSet = otherSet, shortSet = this;\n    }\n\n    unionSet = longSet.clone();\n\n    for (var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++) {\n      unionSet.add(shortSetElements[i]);\n    }\n\n    return unionSet;\n  };\n  /**\n   * Returns a representation of the sorted set ready for serialisation.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toJSON = function () {\n    return this.toArray();\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr;\n  });\n})();","'use strict';\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.number.is-nan\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n      return function (key) {\n        return function (result, value, index) {\n          if (value === null || value === undefined || value.length === 0) {\n            return result;\n          }\n\n          if (index === 0) {\n            return [[encode(key, options), '=', encode(value, options)].join('')];\n          }\n\n          return [[result, encode(value, options)].join(',')];\n        };\n      };\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n        var newValue = isArray ? value.split(',') : value;\n        accumulator[key] = newValue;\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  for (var _iterator = input.split('&'), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var param = _ref;\n\n    var _splitOnFirst = splitOnFirst(param.replace(/\\+/g, ' '), '='),\n        key = _splitOnFirst[0],\n        value = _splitOnFirst[1]; // Missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n    value = value === undefined ? null : decode(value, options);\n\n    if (options.parseNumbers && !Number.isNaN(Number(value))) {\n      value = Number(value);\n    } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n      value = value.toLowerCase() === 'true';\n    }\n\n    formatter(decode(key, options), value, ret);\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none'\n  }, options);\n  var formatter = encoderForArrayFormat(options);\n  var keys = Object.keys(object);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (input, options) {\n  return {\n    url: removeHash(input).split('?')[0] || '',\n    query: parse(extract(input), options)\n  };\n};","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\" + x.charCodeAt(0).toString(16).toUpperCase();\n  });\n};","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","'use strict';\n\nmodule.exports = function (string, separator) {\n  if (!(typeof string === 'string' && typeof separator === 'string')) {\n    throw new TypeError('Expected the arguments to be of type `string`');\n  }\n\n  if (separator === '') {\n    return [string];\n  }\n\n  var separatorIndex = string.indexOf(separator);\n\n  if (separatorIndex === -1) {\n    return [string];\n  }\n\n  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];\n};"],"sourceRoot":""}