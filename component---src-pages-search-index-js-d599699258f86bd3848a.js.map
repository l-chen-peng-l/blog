{"version":3,"sources":["webpack:///./src/components/SearchBox/index.js","webpack:///./src/components/withLocation/index.js","webpack:///./src/pages/search/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["withLocation","ComponentToWrap","props","react_default","a","createElement","es","_ref","location","navigate","Object","assign","search","queryString","parse","SearchBox","_this","_Component","call","this","getOrCreateIndex","index","Index","load","searchIndex","evt","query","target","value","replace","state","results","isActive","componentDidMount","_this2","q","setState","expand","map","ref","documentStore","getDoc","componentDidUpdate","prevProps","_this3","_ref2","render","className","id","style","cursor","onClick","window","history","back","htmlFor","placeholder","type","name","onChange","length","filter","page","templateKey","key","slug","gatsby_browser_entry","to","title","Component","SearchPage","data","components_SearchBox","siteSearchIndex","_1346230460","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","children","Consumer","ProdPageRenderer","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-search-index-js-d599699258f86bd3848a.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { navigate } from '@reach/router'\nimport { Index } from 'elasticlunr'\nimport withLocation from '../withLocation'\n\nclass SearchBox extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      query: ``,\n      results: [],\n      isActive: false,\n    }\n  }\n\n  getOrCreateIndex = () =>\n    this.index\n      ? this.index\n      : Index.load(this.props.searchIndex);\n\n  componentDidMount () {\n    if (this.props.search && this.props.search.q) {\n      const { q } = this.props.search\n\n      this.index = this.getOrCreateIndex()\n\n      this.setState({\n        query: q,\n        results: this.index\n          .search(q, { expand: true }) // Accept partial matches\n          // Map over each ID and return the full document\n          .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n        isActive: !!q,\n      })\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.search !== prevProps.search) {\n      const { q } = this.props.search\n\n      this.index = this.getOrCreateIndex()\n\n      /*eslint-disable */\n      this.setState({\n        query: q,\n        // Query the index with search string to get an [] of IDs\n        results: this.index\n          .search(q, { expand: true }) // Accept partial matches\n          // Map over each ID and return the full document\n          .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n        isActive: !!q\n      });\n      /* eslint-enable */\n    }\n  }\n\n  search = evt => {\n    const query = evt.target.value\n\n    navigate(`?q=${query}`, { replace: true })\n  };\n\n  render () {\n    return (\n      <div className='measure center pa3'>\n        <fieldset className='cf bn ma0 pa0'>\n          <div className='cf'>\n            <small id='name-desc' className='f6 black-60 db mb2 tr' style={{ cursor: 'pointer' }}\n              onClick={() => window.history.back()}>Close\n            </small>\n            <label className='clip' htmlFor='search'>Search</label>\n            <input\n              className='f4 f5-l input-reset ba b--black-20 fl black-80 bg-white pa3 lh-solid w-100 br2-ns br--left-ns'\n              placeholder='Search...'\n              type='text'\n              name='search'\n              onChange={this.search}\n              value={this.state.query}\n              id='search' />\n          </div>\n        </fieldset>\n        {(this.state.isActive && this.state.results.length)\n          ? this.state.results\n            .filter(page => page.templateKey === 'article-page')\n            .map(page => (\n              <article key={page.slug} className='pv4 bb b--black-10 ph3 ph0-l'>\n                <Link className='db ph0-l no-underline black dim' key={page.id} to={page.slug} replace>\n                  <h1 className='f3 fw1 baskerville mt0 lh-title'>{page.title}</h1>\n                </Link>\n              </article>\n            ))\n          : <div>\n            <p className='fw1 i tc mt4 mt5-l f4 f3-l'>Are you looking for one of these?</p>\n            <ul className='list tc pl0 w-100 mt5'>\n              <li className='dib'><Link className='f5 f4-ns link black db pv2 ph3 hover-light-blue' to='/'\n                replace>Home</Link>\n              </li>\n              <li className='dib'><Link className='f5 f4-ns link black db pv2 ph3 hover-light-green'\n                to='/about' replace>About</Link>\n              </li>\n              <li className='dib'><Link className='f5 f4-ns link black db pv2 ph3 hover-light-yellow'\n                to='/contact' replace>Contact</Link>\n              </li>\n              <li className='dib'><Link className='f5 f4-ns link black db pv2 ph3 hover-light-purple'\n                to='/tags' replace>Tags</Link>\n              </li>\n            </ul>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withLocation(SearchBox)\n","import React from 'react'\nimport { Location } from '@reach/router'\nimport queryString from 'query-string'\n\nconst withLocation = ComponentToWrap => props => (\n  <Location>\n    {({ location, navigate }) => (\n      <ComponentToWrap\n        {...props}\n        location={location}\n        navigate={navigate}\n        search={location.search ? queryString.parse(location.search) : {}}\n      />\n    )}\n  </Location>\n)\n\nexport default withLocation\n","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport 'tachyons-sass/tachyons.scss'\nimport SearchBox from '../../components/SearchBox'\n\nconst SearchPage = () => (\n  <StaticQuery\n    query={graphql`\n            query SearchIndexQuery {\n                siteSearchIndex {\n                    index\n                }\n            }\n        `}\n    render={data => (\n      <section className='vh-100 avenir'>\n        <SearchBox searchIndex={data.siteSearchIndex.index} />\n      </section>)}\n  />\n)\n\nexport default SearchPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}